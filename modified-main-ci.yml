trigger:
  branches:
    include:
      - main
  paths:
    include:
      - 'ui/*'  # Trigger pipeline when anything under 'ui/' changes
      - 'users/*'  # Trigger pipeline when anything under 'users/' changes
      - 'posts/*'  # Trigger pipeline when anything under 'posts/' changes
      - 'comments/*'  # Trigger pipeline when anything under 'comments/' changes

pool:
  vmImage: ubuntu-latest

jobs:
  - job: BuildUI
    displayName: 'Build UI Service'
    condition: and(contains(variables['ChangedFiles'], 'ui/'), eq(variables['Build.SourceBranchName'], 'main'))
    steps:
      - script: |
          git fetch --prune --unshallow
          echo "Checking if UI files changed..."
          changedFiles=$(git diff --name-only $BUILD_SOURCEVERSION^ $BUILD_SOURCEVERSION)
          echo "Changed files: $changedFiles"
          echo "##vso[task.setvariable variable=ChangedFiles;]$changedFiles"
        displayName: 'Get Changed Files for UI'
      
      - template: template-pipeline.yml
        parameters:
          microservice: 'ui'
          dockerfilePath: 'ui/Dockerfile'
          azureSubscription: 'test-aks-application12'
          imageName: '$(Build.Repository.Name)-$(Build.SourceBranchName)-ui:$(Build.BuildId)'

  - job: BuildUsers
    displayName: 'Build Users Service'
    condition: and(contains(variables['ChangedFiles'], 'users/'), eq(variables['Build.SourceBranchName'], 'main'))
    steps:
      - script: |
          git fetch --prune --unshallow
          echo "Checking if Users files changed..."
          changedFiles=$(git diff --name-only $BUILD_SOURCEVERSION^ $BUILD_SOURCEVERSION)
          echo "Changed files: $changedFiles"
          echo "##vso[task.setvariable variable=ChangedFiles;]$changedFiles"
        displayName: 'Get Changed Files for Users'

      - template: template-pipeline.yml
        parameters:
          microservice: 'users'
          dockerfilePath: 'users/Dockerfile'
          azureSubscription: 'test-aks-application12'
          imageName: '$(Build.Repository.Name)-$(Build.SourceBranchName)-users:$(Build.BuildId)'

  - job: BuildPosts
    displayName: 'Build Posts Service'
    condition: and(contains(variables['ChangedFiles'], 'posts/'), eq(variables['Build.SourceBranchName'], 'main'))
    steps:
      - script: |
          git fetch --prune --unshallow
          echo "Checking if Posts files changed..."
          changedFiles=$(git diff --name-only $BUILD_SOURCEVERSION^ $BUILD_SOURCEVERSION)
          echo "Changed files: $changedFiles"
          echo "##vso[task.setvariable variable=ChangedFiles;]$changedFiles"
        displayName: 'Get Changed Files for Posts'

      - template: template-pipeline.yml
        parameters:
          microservice: 'posts'
          dockerfilePath: 'posts/Dockerfile'
          azureSubscription: 'test-aks-application12'
          imageName: '$(Build.Repository.Name)-$(Build.SourceBranchName)-posts:$(Build.BuildId)'

  - job: BuildComments
    displayName: 'Build Comments Service'
    condition: and(contains(variables['ChangedFiles'], 'comments/'), eq(variables['Build.SourceBranchName'], 'main'))
    steps:
      - script: |
          git fetch --prune --unshallow
          echo "Checking if Comments files changed..."
          changedFiles=$(git diff --name-only $BUILD_SOURCEVERSION^ $BUILD_SOURCEVERSION)
          echo "Changed files: $changedFiles"
          echo "##vso[task.setvariable variable=ChangedFiles;]$changedFiles"
        displayName: 'Get Changed Files for Comments'

      - template: template-pipeline.yml
        parameters:
          microservice: 'comments'
          dockerfilePath: 'comments/Dockerfile'
          azureSubscription: 'test-aks-application12'
          imageName: '$(Build.Repository.Name)-$(Build.SourceBranchName)-comments:$(Build.BuildId)'
